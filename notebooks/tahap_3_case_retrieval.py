# -*- coding: utf-8 -*-
"""Tahap 3 Case Retrieval.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Kl74aVdEsjhZ-KmI6nLosKhhJWttRN7T

# **Tahap 3 ‚Äì Case Retrieval**

---
"""

!pip install scikit-learn

# 03_retrieval.py
import pandas as pd
import json
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# === 1. Load Data ===
data_path = "/content/drive/MyDrive/Penalaran Komputer/UAS/Data/processed/cases.csv"
df = pd.read_csv(data_path)

# Pastikan text_full tidak kosong
df["text_full"] = df["text_full"].fillna("").astype(str)

# === 2. TF-IDF Vectorization ===
vectorizer = TfidfVectorizer()
case_vectors = vectorizer.fit_transform(df["text_full"])

# === 3. Retrieval Function ===
def retrieve(query: str, k: int = 5):
    query_vector = vectorizer.transform([query])
    similarity = cosine_similarity(query_vector, case_vectors)[0]
    top_k_idx = similarity.argsort()[-k:][::-1]
    top_k_case_ids = df.iloc[top_k_idx]["case_id"].tolist()
    return top_k_case_ids

# === 4. Simpan Query Evaluasi ===
queries = [
    {"query_id": "q1", "query_text": "Penipuan dalam jual beli rumah secara online"},
    {"query_id": "q2", "query_text": "Terdakwa menawarkan investasi fiktif dan mengambil uang korban"},
    {"query_id": "q3", "query_text": "Korban tertipu membeli motor yang tidak pernah dikirim"},
    {"query_id": "q4", "query_text": "Tindak pidana penipuan dengan modus menjadi pegawai bank palsu"},
    {"query_id": "q5", "query_text": "Penipuan dalam transaksi pengadaan barang oleh perusahaan"}
]

eval_path = "/content/drive/MyDrive/Penalaran Komputer/UAS/Data/eval/queries.json"
with open(eval_path, "w", encoding="utf-8") as f:
    json.dump(queries, f, indent=2, ensure_ascii=False)

print("‚úÖ Script selesai. Fungsi `retrieve()` siap digunakan.")
print(f"üìÑ Query evaluasi disimpan ke: {eval_path}")

top_cases = retrieve("Penipuan dalam jual beli rumah secara online", k=3)
print("Top 3 mirip:", top_cases)

top_cases = retrieve("Terdakwa menawarkan investasi fiktif dan mengambil uang korban", k=3)
print("Top 3 mirip:", top_cases)

top_cases = retrieve("Korban tertipu membeli motor yang tidak pernah dikirim", k=3)
print("Top 3 mirip:", top_cases)

top_cases = retrieve("Tindak pidana penipuan dengan modus menjadi pegawai bank palsu", k=3)
print("Top 3 mirip:", top_cases)

top_cases = retrieve("Penipuan dalam transaksi pengadaan barang oleh perusahaan", k=3)
print("Top 3 mirip:", top_cases)

ground_truth = {
    "q1": [29, 153, 252],         # ‚Üê kamu isi manual berdasarkan hasil retrieval & pemeriksaan
    "q2": [89, 183, 112],
    "q3": [63, 112, 11],
    "q4": [35, 25, 85],
    "q5": [99, 3, 202]
}

import json
with open("/content/drive/MyDrive/Penalaran Komputer/UAS/Data/eval/ground_truth.json", "w", encoding="utf-8") as f:
    json.dump(ground_truth, f, indent=2)

print("‚úÖ File ground_truth.json berhasil dibuat.")